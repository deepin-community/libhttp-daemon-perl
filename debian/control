Source: libhttp-daemon-perl
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders: gregor herrmann <gregoa@debian.org>
Section: perl
Testsuite: autopkgtest-pkg-perl
Priority: optional
Build-Depends: debhelper-compat (= 13),
               libmodule-build-tiny-perl
# don't build-depend on libwww-perl to avoid circular bdep
Build-Depends-Indep: libhttp-date-perl <!nocheck>,
                     libhttp-message-perl <!nocheck>,
                     libio-socket-ip-perl <!nocheck>,
                     liblwp-mediatypes-perl <!nocheck>,
                     libmodule-metadata-perl <!nocheck>,
                     libsocket-perl <!nocheck>,
                     libtest-needs-perl <!nocheck>,
                     libtest-simple-perl <!nocheck>,
                     liburi-perl <!nocheck>,
                     perl
Standards-Version: 4.5.0
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/libhttp-daemon-perl
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/libhttp-daemon-perl.git
Homepage: https://metacpan.org/release/HTTP-Daemon
Rules-Requires-Root: no

Package: libhttp-daemon-perl
Architecture: all
Depends: ${misc:Depends},
         ${perl:Depends},
         libhttp-date-perl,
         libhttp-message-perl,
         libio-socket-ip-perl,
         liblwp-mediatypes-perl,
         libsocket-perl
Breaks: libhttp-proxy-perl (<< 0.304-4),
        librpc-xml-perl (<< 0.80-2),
        libwww-mechanize-perl (<< 1.91-2)
Description: simple http server class
 Instances of the HTTP::Daemon class are HTTP/1.1 servers that listen on a
 socket for incoming requests. The HTTP::Daemon is a subclass of
 IO::Socket::IP, so you can perform socket operations directly on it too.
 .
 The accept() method will return when a connection from a client is available.
 The returned value will be an HTTP::Daemon::ClientConn object which is
 another IO::Socket::IP subclass. Calling the get_request() method on this
 object will read data from the client and return an HTTP::Request object. The
 ClientConn object also provide methods to send back various responses.
 .
 This HTTP daemon does not fork(2) for you. Your application, i.e. the user of
 the HTTP::Daemon is responsible for forking if that is desirable. Also note
 that the user is responsible for generating responses that conform to the
 HTTP/1.1 protocol.
